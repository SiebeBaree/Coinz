// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type InventoryItem {
  itemId String
  amount Int
}

type MemberInvestment {
  ticker   String
  amount   String
  buyPrice String
}

model Account {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @db.ObjectId
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  Account       Account[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Investment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ticker    String
  type      String
  fullName  String
  price     String
  changed   String
  updatedAt DateTime @updatedAt
  expires   DateTime

  @@unique([ticker, type])
}

model member {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  banned       Boolean
  votes        Int
  wallet       Int
  bank         Int
  bankLimit    Int
  experience   Int
  inventory    InventoryItem[]
  stocks       MemberInvestment[]
  profileColor String
  birthday     DateTime
  bio          String
}

model BotStats {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  guilds      Int
  users       Int
  commands    Int
  investments Int
  updatedAt   DateTime @updatedAt
}

model Item {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  itemId          String  @unique
  category        String
  name            String
  emoteId         String
  description     String
  longDescription String?
  buyPrice        Int?
  sellPrice       Int?
  multiplier      Int?
  duration        Int?
}
